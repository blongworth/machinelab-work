---
title: "matlab_fluxes"
format: html
---

```{r}
library(tidyverse)
library(mlabtools)
library(furrr)
library(purrr)
library(arrow)
library(tictoc)
library(patchwork)
library(imputeTS)
library(dygraphs)
library(suntools)

options(digits.secs = 6)

theme_set(theme_classic())
data_dir <- "data/processed/surface"
```

```{r}
ds <- open_dataset(file.path(data_dir, "lecs_adv_4hz_imp_grp_15_mv.parquet/"))
flux <- read_parquet(file.path(data_dir, "lecs_flux_4hz_rot_fl5_tightfilt.parquet/part-0.parquet"))
```


```{r}
dygraph(select(flux, timestamp, flux3o2stor, Flux3cpsdLowStor), group = "flux")
```

```{r}
flux |> 
  ggplot(aes(timestamp, flux3o2)) +
  geom_line() +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")
```

```{r}
flux |> 
  ggplot(aes(timestamp, Flux3cpsdLowStor)) +
  geom_line() +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")
```

```{r}
flux |> 
  filter(correlationmean > 50) |> 
  ggplot(aes(timestamp, Flux3cpsdLowStor)) +
  geom_line() +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")
```
Velocity histogram

```{r}
flux |>
  select(timestamp, vxmean, vymean, vzmean) |> 
  # filter(timestamp > "2023-11-28 18:00:00",
  #        timestamp < "2023-11-28 22:00:00") |> 
  pivot_longer(cols = c(vxmean, vymean, vzmean),
               names_to = "axis", values_to = "velocity") |> 
  ggplot(aes(velocity)) +
  geom_density() +
  facet_grid(rows = "axis", scales = "free_y")
```

Remove low mean correlation
No flux for low velocity

```{r}
flux_filt <- flux |> 
  filter(correlationmean > 50) |> 
  mutate(FluxcpsdLowStor = if_else(abs(vmean) < 0.01,
                                   Flux3cpsdLowStor - Flux3cpsdLow,
                                   Flux3cpsdLowStor))
```


```{r}
flux_filt |> 
  ggplot(aes(timestamp, Flux3cpsdLowStor)) +
  geom_line() +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")
```

```{r}
dygraph(select(flux_filt, timestamp, vxmean, vymean, vzmean), group = "flux")
```

```{r}
dygraph(select(flux, timestamp, SNRmean, correlationmean), group = "flux")
```

```{r}
flux |>
  select(timestamp, vxmean, vymean, vzmean) |> 
  # filter(timestamp > "2023-11-28 18:00:00",
  #        timestamp < "2023-11-28 22:00:00") |> 
  pivot_longer(cols = c(vxmean, vymean, vzmean),
               names_to = "axis", values_to = "velocity") |> 
  ggplot(aes(timestamp, velocity)) +
  geom_line() +
  facet_grid(rows = "axis")
```

```{r}
flux |>
  select(timestamp, vxrot, vyrot, vzrot) |> 
  # filter(timestamp > "2023-11-28 18:00:00",
  #        timestamp < "2023-11-28 22:00:00") |> 
  pivot_longer(cols = c(vxrot, vyrot, vzrot),
               names_to = "axis", values_to = "velocity") |> 
  ggplot(aes(timestamp, velocity)) +
  geom_line() +
  facet_grid(rows = "axis")
```

```{r}
dygraph(select(flux, timestamp, vxrot, vyrot, vzrot), group = "flux")
```

```{r}
dygraph(select(flux, timestamp, o2mean), group = "flux")
```


```{r}
dygraph(select(flux, timestamp, SNRmean, correlationmean), group = "flux")
```

```{r}
flux |> 
  select(vxmean, vymean) |> 
  mutate(across(everything(), abs)) |> 
  plot()
```

Diurnal cycle

```{r}
crds <- matrix(c(-70.7003, 41.51875), nrow = 1)

# calculate predicted par from solar azimuth
pred_par <- function(crds, timestamp) {
  altitude <- solarpos(crds, timestamp)[,2]
  altitude <- replace(altitude, altitude <= 0, 0)
  insolation = sin(altitude * pi / 180)
  par = 0.45 * insolation * 4.6 * 1000
  par
}
```

```{r}
flux_h <- flux_filt |> 
  mutate(par = pred_par(crds, timestamp),
         hour = hour(timestamp)) |> 
  group_by(hour) |> 
  summarise(across(-Flux_cpsd_xy_low, 
                   c(mean = \(x) mean(x, na.rm = TRUE), 
                     sd = \(x) sd(x, na.rm = TRUE))))
```


```{r}
o2 <- ggplot(flux_h, aes(hour, Flux3cpsdLowStor_mean)) + 
  geom_line() +
  #geom_pointrange(aes(ymin = flux3o2_mean - flux3o2_sd,
  #                    ymax = flux3o2_mean + flux3o2_sd)) +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")

par <- ggplot(flux_h, aes(hour, par_mean)) +
  geom_line()

par / o2
```

```{r}
ph <- ggplot(flux_h, aes(hour, Flux3cpsdphLowStor_mean)) + 
  geom_line() +
  geom_hline(yintercept = 0) +
  ylab("H+ Flux [umol/m2/h]")

par <- ggplot(flux_h, aes(hour, par_mean)) +
  geom_line()

par / ph
```

```{r}
flux_s <- flux_filt |> 
  mutate(par = pred_par(crds, timestamp),
         hour = hour(timestamp),
         month = month(timestamp),
         season = case_when(
           month %in% 10:12 ~ "Fall",
           month %in%  1:3  ~ "Winter",
           month %in%  4:6  ~ "Spring",
           TRUE ~ "Summer")) |> 
  group_by(hour, season) |> 
  summarise(across(-Flux_cpsd_xy_low, 
                   c(mean = \(x) mean(x, na.rm = TRUE), 
                     sd = \(x) sd(x, na.rm = TRUE))))
```

```{r}
o2 <- ggplot(flux_s, aes(hour, flux3o2_mean, color = season)) + 
  geom_line() +
  geom_pointrange(aes(ymin = flux3o2_mean - flux3o2_sd,
                      ymax = flux3o2_mean + flux3o2_sd),
                  size = 0.1,
                  position = position_dodge(width = 0.5)) +
  geom_hline(yintercept = 0) +
  ylab("O2 Flux [mmol/m2/h]")

par <- ggplot(flux_s, aes(hour, par_mean, color = season)) +
  geom_line()

par / o2
```


```{r}
o2 <- ggplot(flux_s, aes(hour, Flux3cpsdphLowStor_mean, color = season)) + 
  geom_line() +
  geom_pointrange(aes(ymin = flux3ph_mean - flux3ph_sd,
                      ymax = flux3ph_mean + flux3ph_sd),
                  size = 0.1,
                  position = position_dodge(width = 0.5)) +
  geom_hline(yintercept = 0) +
  ylab("H+ Flux [mmol/m2/h]")

par <- ggplot(flux_s, aes(hour, par_mean, color = season)) +
  geom_line()

par / o2
```


# fall vs spring/summer

```{r}
flux_fall <- flux_filt |> 
  filter(timestamp > "2023-10-01",
         timestamp < "2024-02-01") |> 
  mutate(per = "fall")

flux_spring <- flux_filt |> 
  filter(timestamp > "2024-03-01",
         timestamp < "2024-09-01") |> 
  mutate(per = "spring")

flux_comp <- bind_rows(flux_fall, flux_spring)
```

```{r}
flux_comp_h <- flux_comp |> 
  mutate(par = pred_par(crds, timestamp),
         hour = hour(timestamp)) |> 
  group_by(per, hour) |> 
  summarise(across(-Flux_cpsd_xy_low, 
                   c(mean = \(x) mean(x, na.rm = TRUE), 
                     sd = \(x) sd(x, na.rm = TRUE))))
```

```{r}
o2 <- ggplot(flux_comp_h, aes(hour, Flux3cpsdLowStor_mean)) + 
  geom_line() +
  geom_pointrange(aes(ymin = Flux3cpsdLowStor_mean - Flux3cpsdLowStor_sd ,
                      ymax = Flux3cpsdLowStor_mean  + Flux3cpsdLowStor_sd ),
                  size = 0.1,
                  position = position_dodge(width = 0.5)) +
  geom_hline(yintercept = 0) +
  ylab("H+ Flux [mmol/m2/h]") +
  facet_grid(rows = "per",
             scales = "free_y")

par <- ggplot(flux_comp_h, aes(hour, par_mean, color = per)) +
  geom_line()

par / o2
```
  