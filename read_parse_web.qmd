---
title: "Parse LECS Web"
format: html
editor: visual
---

Get and parse data sent to LECS website

# Get Data

```{r}
library(tidyverse)
library(rvest)
library(lubridate)
```

Extract table

```{r}
df <- read_html("https://gems.whoi.edu/LECSrawdata/") |> 
  html_node("table") |> 
  html_table()
```

## Met

```{r}
met <- df |> 
  filter(str_starts(X1, "\\[\\d+\\]M:")) |> 
  mutate(X1 = str_remove(X1, "\\[\\d+\\]M:")) |> 
  separate(X1, into = c('hour', 'min', 'sec', 'day', 'month', 'year', 'PAR', 'wind_speed', 'wind_dir'), sep = ',') |> 
  mutate(across(1:6, as.integer),
         across(7:9, as.numeric)) |> 
  mutate(timestamp = make_datetime(year, month, day, hour, min, sec, tz = "EDT"))
  
```

### PAR

```{r}
ggplot(met, aes(timestamp, PAR)) + geom_line()
```

### Wind Speed

```{r}
ggplot(met, aes(timestamp, wind_speed)) + geom_line()
```

### Wind direction

```{r}
ggplot(met, aes(timestamp, wind_dir)) + geom_line()
```

## Status

```{r}
status <- df |> 
  filter(str_starts(X1, "\\[\\d+\\]S:")) |> 
  mutate(X1 = str_remove(X1, "\\[\\d+\\]S:")) |> 
  separate(X1, 
           into = c('hour', 'min', 'sec', 'day', 'month', 'year',
                        'adv_min', 'adv_sec', 'adv_day', 'adv_hour', 
                        'adv_year', 'adv_month',
                        'bat', 'soundspeed', 'heading', 'pitch', 
                        'roll', 'temp', 'pump_current', 'pump_voltage', 'pump_power'),
           sep = ',') |>
  mutate(across(1:12, as.integer),
         across(13:21, ~ as.numeric(.x) * .1)) |> 
  mutate(timestamp = make_datetime(year, month, day, hour, min, sec, tz = "EDT"))
  
```

```{r}
status <- status |> 
  filter(adv_day < 32, adv_month < 13, adv_min < 61, adv_hour < 24, adv_year < 100)
status |> 
  filter(bat < 15, bat > 0, year == 2023, month < 6) |> 
ggplot(aes(timestamp, bat)) + geom_line()
```

