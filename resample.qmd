---
title: "Resample LECS ADV timeseries"
format: html
editor: source
---

* Resample filtered and calibrated data to hourly and every minute
* Resample to 4Hz

impute missing points. Acceptable number?

How to divide up remaining points and group

* group between gaps
* group these groups by 1h or 15 min
* run flux on each group

```{r}
library(tidyverse)
library(arrow)
library(tictoc)
library(imputeTS)

options(digits.secs = 6)

data_dir <- "data/processed/surface"
```

```{r}
ds <- open_dataset(file.path(data_dir, "lecs_adv_cal.parquet"))
```

resample to hourly

arrow

```{r}
ds_hourly <- ds |>
  select(-c(year, month)) |> 
  mutate(timestamp = floor_date(timestamp, "hour")) |> 
  group_by(timestamp) |> 
  summarise(across(everything(), 
                   ~ mean(.x, na.rm = TRUE))) |> 
  ungroup() |> 
  collect()

ds_hourly |> 
  data.table::fwrite(file.path(data_dir, "lecs_adv_hourly.csv"))

write_dataset(ds_hourly, 
              file.path(data_dir, "lecs_adv_hourly.parquet"))
```

resample to minute

```{r}
ds_minute <- ds |> 
  select(-c(year, month)) |> 
  mutate(timestamp = floor_date(timestamp, "minute")) |> 
  group_by(timestamp) |> 
  summarise(across(everything(), 
                   ~ mean(.x, na.rm = TRUE))) |> 
  ungroup() |> 
  collect()

ds_minute |> 
  data.table::fwrite(file.path(data_dir, "lecs_adv_minute.csv"))

write_dataset(ds_minute, 
              file.path(data_dir, "lecs_adv_minute.parquet"))
```

clear previous data

```{r}
rm("ds_hourly", "ds_minute")
```

Resample to 4Hz and impute missing data

create complete 4Hz timeseries and join to add NA's for missing data

break up by year to process without crashing

```{r}
rs <- function(y) {
  ds |> 
    filter(year == y) |> 
    select(-month) |> 
    mutate(timestamp = floor_date(timestamp, ".250 sec")) |> 
    group_by(timestamp) |> 
    summarise(across(everything(), 
                     ~ mean(.x, na.rm = TRUE))) |> 
    ungroup() |> 
    collect()
}

df_4hz <- map(c(2023,2024) , rs) |> 
  list_rbind()
```


```{r}
st <- min(df_4hz$timestamp) 
et <- max(df_4hz$timestamp) 

ts_4hz <- seq(from = st, to = et, by = 0.25) 

df_ts_4hz <- tibble(timestamp = ts_4hz)

df_4hz_all <- df_ts_4hz |> 
  left_join(df_4hz)
```

clear previous data

```{r}
rm("df_ts_4hz", "df_4hz")
```

```{r}
df_4hz_all %>% 
  group_by(year = year(timestamp), month = month(timestamp)) %>% 
  write_dataset(file.path(data_dir, "lecs_adv_4hz.parquet"))
```

Impute by interpolation with a max gap of 1sec.

```{r}
df_4hz_all_imp <- df_4hz_all %>% 
  mutate(across(-timestamp, \(x) na_interpolation(x, maxgap = 4)))
```

clear previous data

```{r}
rm("df_4hz_all")
```

```{r}
df_4hz_all_imp %>% 
  group_by(year = year(timestamp), month = month(timestamp)) %>% 
  write_dataset(file.path(data_dir, "lecs_adv_4hz_imp.parquet"))
```

Add groups representing continuous data
remove NA's and write to parquet

```{r, eval=FALSE}
df_4hz_all_imp <-  open_dataset(file.path(data_dir, "lecs_adv_4hz_imp.parquet")) |>
  arrange(timestamp) |>
  collect()
```

```{r}
df_4hz_imp_grp <- df_4hz_all_imp |> 
  mutate(is_gap = is.na(pH_cal) & !is.na(lag(pH_cal, default = NA))) |> 
  mutate(group = cumsum(is_gap) + 1) |> 
  select(-is_gap) |> 
  drop_na(pressure)
```

```{r}
df_4hz_imp_grp |> 
  group_by(year = year(timestamp), month = month(timestamp)) |> 
  write_dataset(file.path(data_dir, "lecs_adv_4hz_imp_grp.parquet"))
```

divide up big groups

```{r, eval=FALSE}
df_4hz_imp_grp <-  open_dataset(file.path(data_dir, "lecs_adv_4hz_imp_grp.parquet")) |> 
  collect()
```

15 min blocks within groups

```{r}
df_grp <- df_4hz_imp_grp  |> 
  group_by(group) |> 
  mutate(block_time = floor_date(timestamp, unit = "15min"),
         block_start = block_time != lag(block_time),
         block_start = if_else(is.na(block_start), TRUE, block_start)) |> 
  ungroup() |> 
  mutate(block = cumsum(block_start) + 1) |> 
  select(-c(block_time, block_start))
```

Flag lander moves

```{r}
#df_grp <-  open_dataset(file.path(data_dir, "lecs_adv_4hz_imp_grp_10.parquet"))

lander_moves <- read_csv("data/lander_moves.csv") |> 
  rename(change_timestamp = timestamp) |> 
  mutate(lander_position = row_number())

df_grp_mv <- df_grp |> 
  arrange(timestamp) |> 
  collect() |> 
  left_join(lander_moves,
            by = join_by(closest(timestamp >= change_timestamp))) |> 
  fill(lander_position, .direction = "down") |> 
  mutate(lander_position = replace_na(lander_position, 1)) |> 
  select(-change_timestamp)
```

```{r}
df_grp_mv |> 
  group_by(year, month = month(timestamp)) |> 
  write_dataset(file.path(data_dir, "lecs_adv_4hz_imp_grp_15_mv.parquet"))
```

Resample to 8Hz and impute missing data

create complete 8Hz timeseries and join to add NA's for missing data

does not work for full dataset

```{r eval=FALSE}
tic()
df_8hz <- ds |> 
  filter(year == 2024, month == 7) |> 
  select(-c(year, month)) |> 
  mutate(timestamp = floor_date(timestamp, "0.125 seconds")) |> 
  group_by(timestamp) |> 
  summarise(across(everything(), 
                   ~ mean(.x, na.rm = TRUE))) |> 
  ungroup() |> 
  arrange(timestamp) |>
  collect()

st <- min(df_8hz$timestamp) 
et <- max(df_8hz$timestamp) 

ts_8hz <- seq(from = st, to = et, by = 0.125) 

df_ts_8hz <- tibble(timestamp = ts_8hz)

df_8hz_all <- df_ts_8hz |> 
  left_join(df_8hz)
toc()
```

```{r, eval = FALSE}
df_8hz_all %>% 
  group_by(year = year(timestamp), month = month(timestamp)) %>% 
  write_dataset(file.path(data_dir, "lecs_adv_8hz.parquet"))
```
